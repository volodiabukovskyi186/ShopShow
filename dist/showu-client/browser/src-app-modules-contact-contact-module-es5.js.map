{"version":3,"sources":["webpack:///src/app/modules/contact/contact-card/contact-card.component.ts","webpack:///src/app/modules/contact/contact-card/contact-card.component.html","webpack:///src/app/modules/contact/contact-routing.module.ts","webpack:///src/app/modules/contact/contact-us-form/contact-us-form.component.ts","webpack:///src/app/modules/contact/contact-us-form/contact-us-form.component.html","webpack:///src/app/modules/contact/contact.module.ts","webpack:///src/app/modules/contact/contact.service.ts","webpack:///src/app/modules/contact/contacts-block/contacts-block.component.ts","webpack:///src/app/modules/contact/contacts-block/contacts-block.component.html","webpack:///src/app/modules/contact/contacts-page/contacts-page.component.ts","webpack:///src/app/modules/contact/contacts-page/contacts-page.component.html"],"names":["ContactCardComponent","title","src","links","selector","templateUrl","styleUrls","routes","path","component","ContactsRoutingModule","forChild","imports","exports","ContactUsFormComponent","formSubmit","modelChange","emit","val","_model","onSubmit","animations","ContactModule","declarations","ContactService","http","contactUs","email","message","name","subject","get","data","providedIn","ContactsBlockComponent","contact","zoom","darkStyle","elementType","stylers","color","visibility","featureType","event","alert","ContactsPageComponent","breadcrumbs","link","getHandler","contacts","subscribe"],"mappings":"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","file":"src-app-modules-contact-contact-module-es5.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\n\nexport interface IContactLink {\n  title: string;\n  type: string;\n  link: string;\n} \n\n@Component({\n  selector: 'app-contact-card',\n  templateUrl: './contact-card.component.html',\n  styleUrls: ['./contact-card.component.scss']\n})\nexport class ContactCardComponent implements OnInit {\n  @Input() title: string = null;\n  @Input() src: string = null;\n  @Input() links: Array<IContactLink> = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<rap-svg-ico [src]=\"src\"></rap-svg-ico>\n<div class=\"info\">\n  <h6 [innerText]=\"title\"></h6>\n  <ng-container *ngFor=\"let item of links\">\n    <a\n      *ngIf=\"item.link\"\n      [href]=\"item.type ? item.type + ':' + item.link : item.link\"\n      >{{ item.title }}</a\n    >\n    <span *ngIf=\"!item.link\">{{ item.title }}</span>\n  </ng-container>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { ContactsPageComponent } from './contacts-page/contacts-page.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ContactsPageComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ContactsRoutingModule {}\n","import { Component, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\nimport { ContactUs } from \"../contact\";\nimport { fadeHeight } from \"../../ui/animations\";\n\n@Component({\n  animations: [fadeHeight],\n  selector: \"app-contact-us-form\",\n  templateUrl: \"./contact-us-form.component.html\",\n  styleUrls: [\"./contact-us-form.component.scss\"],\n})\nexport class ContactUsFormComponent implements OnInit {\n  @Output() formSubmit = new EventEmitter();\n\n  private _model: ContactUs;\n  @Output() modelChange = new EventEmitter();\n\n  set model(val: ContactUs) {\n    this._model = val;\n    this.modelChange.emit(this._model);\n  }\n\n  @Input() get model(): ContactUs {\n    return this._model;\n  }\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    this.formSubmit.emit();\n  }\n}\n","<form #heroForm=\"ngForm\" (submit)=\"onSubmit()\">\n  <div class=\"form-row\">\n    <div class=\"description\">\n      <label for=\"fullName\">Full name</label>\n    </div>\n    <div class=\"original\">\n      <input\n        #fullName=\"ngModel\"\n        class=\"radius\"\n        type=\"text\"\n        id=\"fullName\"\n        placeholder=\"Enter ur first name\"\n        required\n        name=\"name\"\n        [(ngModel)]=\"model.name\"\n      />\n      <div\n        *ngIf=\"!(fullName.valid || fullName.pristine)\"\n        @fadeHeight\n        class=\"validation-msg red\"\n      >\n        First name is required\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-row\">\n    <div class=\"description\">\n      <label for=\"email\">Email</label>\n    </div>\n    <div class=\"original\">\n      <input\n        #email=\"ngModel\"\n        class=\"radius\"\n        type=\"email\"\n        id=\"email\"\n        placeholder=\"Enter ur Email\"\n        required\n        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n        name=\"email\"\n        [(ngModel)]=\"model.email\"\n      />\n      <div\n        *ngIf=\"!(email.valid || email.pristine)\"\n        @fadeHeight\n        class=\"validation-msg red\"\n      >\n        Email is required\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-row\">\n    <div class=\"description\">\n      <label for=\"subject\">Subject</label>\n    </div>\n    <div class=\"original\">\n      <input\n        #subject=\"ngModel\"\n        class=\"radius\"\n        type=\"text\"\n        id=\"subject\"\n        placeholder=\"Enter subject\"\n        name=\"subject\"\n        [(ngModel)]=\"model.subject\"\n      />\n    </div>\n  </div>\n\n  <div class=\"form-row\">\n    <div class=\"description\">\n      <label for=\"message\">Message</label>\n    </div>\n    <div class=\"original\">\n      <textarea\n        #message=\"ngModel\"\n        class=\"radius\"\n        type=\"text\"\n        required\n        id=\"message\"\n        placeholder=\"Enter message\"\n        name=\"message\"\n        [(ngModel)]=\"model.message\"\n        rows=\"5\"\n      ></textarea>\n      <div\n        *ngIf=\"!(message.valid || message.pristine)\"\n        @fadeHeight\n        class=\"validation-msg red\"\n      >\n        Message is required\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-row\">\n    <div class=\"description\"></div>\n    <div class=\"original\">\n      <div class=\"flex\">\n        <button\n          [disabled]=\"!heroForm.valid\"\n          type=\"submit\"\n          class=\"button radius delete\"\n        >\n          Submit\n        </button>\n      </div>\n    </div>\n  </div>\n</form>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ContactsBlockComponent } from \"./contacts-block/contacts-block.component\";\n\n// import { AgmCoreModule } from \"@agm/core\";\nimport { UiModule } from \"../ui/ui.module\";\nimport { ContactUsFormComponent } from \"./contact-us-form/contact-us-form.component\";\nimport { FormsModule } from \"@angular/forms\";\nimport { ContactCardComponent } from \"./contact-card/contact-card.component\";\nimport { ContactsPageComponent } from \"./contacts-page/contacts-page.component\";\nimport { ContactsRoutingModule } from \"./contact-routing.module\";\n\n@NgModule({\n  declarations: [\n    ContactsBlockComponent,\n    ContactUsFormComponent,\n    ContactCardComponent,\n    ContactsPageComponent,\n  ],\n  exports: [ContactsBlockComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    ContactsRoutingModule,\n    // AgmCoreModule.forRoot({\n    //   apiKey: \"AIzaSyBvi88oOOInhDNFct0hsMpWv7ytTTrXThg\",\n    // }),\n  ],\n})\nexport class ContactModule {}\n","import { Injectable } from \"@angular/core\";\nimport { Contact, ContactUs } from \"./contact\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ContactService {\n  contacts: Contact;\n  contactUs: ContactUs = { email: \"\", message: \"\", name: \"\", subject: \"\" };\n\n  constructor(private http: HttpClient) {}\n\n  get(): Observable<any> {\n    return this.http.get<any>(environment.data + `/contact.json`);\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ContactService } from \"../contact.service\";\nimport { IContactLink } from '../contact-card/contact-card.component';\n\n@Component({\n  selector: \"app-contacts-block\",\n  templateUrl: \"./contacts-block.component.html\",\n  styleUrls: [\"./contacts-block.component.scss\"],\n})\nexport class ContactsBlockComponent implements OnInit {\n  constructor(public contact: ContactService) {}\n \n  onSubmit(event) {\n    alert(\"will be...\")\n  }\n\n  ngOnInit(): void {}\n\n  zoom: number = 15;\n\n  public darkStyle = [\n    {\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#f5f5f5\",\n        },\n      ],\n    },\n    {\n      elementType: \"labels.icon\",\n      stylers: [\n        {\n          visibility: \"off\",\n        },\n      ],\n    },\n    {\n      elementType: \"labels.text.fill\",\n      stylers: [\n        {\n          color: \"#616161\",\n        },\n      ],\n    },\n    {\n      elementType: \"labels.text.stroke\",\n      stylers: [\n        {\n          color: \"#f5f5f5\",\n        },\n      ],\n    },\n    {\n      featureType: \"administrative.land_parcel\",\n      elementType: \"labels.text.fill\",\n      stylers: [\n        {\n          color: \"#bdbdbd\",\n        },\n      ],\n    },\n    {\n      featureType: \"poi\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#eeeeee\",\n        },\n      ],\n    },\n    {\n      featureType: \"poi\",\n      elementType: \"labels.text.fill\",\n      stylers: [\n        {\n          color: \"#757575\",\n        },\n      ],\n    },\n    {\n      featureType: \"poi.park\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#e5e5e5\",\n        },\n      ],\n    },\n    {\n      featureType: \"poi.park\",\n      elementType: \"labels.text.fill\",\n      stylers: [\n        {\n          color: \"#9e9e9e\",\n        },\n      ],\n    },\n    {\n      featureType: \"road\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#ffffff\",\n        },\n      ],\n    },\n    {\n      featureType: \"road.arterial\",\n      elementType: \"labels.text.fill\",\n      stylers: [\n        {\n          color: \"#757575\",\n        },\n      ],\n    },\n    {\n      featureType: \"road.highway\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#dadada\",\n        },\n      ],\n    },\n    {\n      featureType: \"road.highway\",\n      elementType: \"labels.text.fill\",\n      stylers: [\n        {\n          color: \"#616161\",\n        },\n      ],\n    },\n    {\n      featureType: \"road.local\",\n      elementType: \"labels.text.fill\",\n      stylers: [\n        {\n          color: \"#9e9e9e\",\n        },\n      ],\n    },\n    {\n      featureType: \"transit.line\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#e5e5e5\",\n        },\n      ],\n    },\n    {\n      featureType: \"transit.station\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#eeeeee\",\n        },\n      ],\n    },\n    {\n      featureType: \"water\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#c9c9c9\",\n        },\n      ],\n    },\n    {\n      featureType: \"water\",\n      elementType: \"labels.text.fill\",\n      stylers: [\n        {\n          color: \"#9e9e9e\",\n        },\n      ],\n    },\n  ];\n}\n","<div class=\"contacts-block\">\n  <app-contact-card\n    [title]=\"'Phone number'\"\n    [src]=\"'assets/icons/phone.svg'\"\n    [links]=\"[\n      {\n        link: contact.contacts?.phone,\n        title: contact.contacts?.phone,\n        type: 'tel'\n      }\n    ]\"\n  ></app-contact-card>\n\n  <app-contact-card\n    [title]=\"'Address'\"\n    [src]=\"'assets/icons/map.svg'\"\n    [links]=\"[\n      {\n        title: contact.contacts?.address.address\n      }\n    ]\"\n  ></app-contact-card>\n\n  <app-contact-card\n    [title]=\"'Email'\"\n    [src]=\"'assets/icons/mail.svg'\"\n    [links]=\"[\n      {\n        link: contact.contacts?.email,\n        title: contact.contacts?.email,\n        type: 'mailto'\n      }\n    ]\"\n  ></app-contact-card>\n</div>\n\n<br />\n<br />\n<div class=\"radius map-shadow\" style=\"overflow: hidden;\">\n  <div class=\"ratio\">\n    <div class=\"cinema\">\n      <!-- <agm-map\n        [styles]=\"darkStyle\"\n        [zoom]=\"zoom\"\n        class=\"cover\"\n        [scrollwheel]=\"false\"\n        [latitude]=\"contact.contacts?.address.lat\"\n        [longitude]=\"contact.contacts?.address.lng\"\n      >\n        <agm-marker\n          [latitude]=\"contact.contacts?.address.lat\"\n          [longitude]=\"contact.contacts?.address.lng\"\n        ></agm-marker>\n      </agm-map> -->\n    </div>\n  </div>\n</div>\n<div class=\"card-form radius\" style=\"max-width: unset;\">\n  <div style=\"width: 100%;\" class=\"d4 text-center flex row center v_center\">\n    <h1 style=\"margin-top: 0;\">Leave your message</h1>\n    <span style=\"color: #9b9b9b;\"\n      >Feel freeto contact width us by using the form below</span\n    >\n  </div>\n\n  <!-- <div class=\"flex center\"> -->\n    <app-contact-us-form\n      (formSubmit)=\"onSubmit($event)\"\n      [model]=\"contact.contactUs\"\n    ></app-contact-us-form>\n  <!-- </div> -->\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { NavLink } from \"src/app/modules/ui/rap/nav-item/nav-link\";\n// import { NgxUiLoaderService } from \"ngx-ui-loader\";\nimport { ContactService } from \"src/app/modules/contact/contact.service\";\nimport { Contact } from \"src/app/modules/contact/contact\";\n\n@Component({\n  selector: \"app-contacts-page\",\n  templateUrl: \"./contacts-page.component.html\",\n  styleUrls: [\"./contacts-page.component.scss\"],\n})\nexport class ContactsPageComponent implements OnInit {\n  breadcrumbs: Array<NavLink> = [\n    {\n      link: \"/\",\n      title: \"Homepage\",\n    },\n    {\n      link: \"contacts\",\n      title: \"Contacts\",\n    },\n  ];\n\n  constructor(\n    // private ngxService: NgxUiLoaderService,\n    public contact: ContactService\n  ) {}\n\n  ngOnInit(): void {\n    // this.ngxService.start();\n\n    this.contact.get().subscribe(this.getHandler);\n  }\n\n  getHandler = (data: Contact) => {\n    // this.ngxService.stopAll();\n    this.contact.contacts = data;\n  };\n  \n}\n","<rap-breadcrumbs [breadcrumbs]=\"breadcrumbs\"></rap-breadcrumbs>\n\n<div style=\"width: 100%;\" class=\"d4 text-center flex row center v_center\">\n  <h1 style=\"margin-top: 0;\">Contact Us</h1>\n</div>\n\n<app-contacts-block></app-contacts-block>\n"]}