{"version":3,"sources":["webpack:///src/app/modules/client-page/client-page-page/client-page-page.component.ts","webpack:///src/app/modules/client-page/client-page-page/client-page-page.component.html","webpack:///src/app/modules/client-page/client-page-routing.module.ts","webpack:///src/app/modules/client-page/client-page.module.ts","webpack:///src/app/modules/client-page/client-page.service.ts"],"names":["ClientPagePageComponent","route","clientPage","title","meta","alias","getByAliasHandler","data","page","updateMeta","updateBreadcrumbs","initBreadcrumbs","params","subscribe","getByAlias","breadcrumbs","link","push","description","desc","meta_description","keys","meta_keywords","setTitle","updateTag","name","content","selector","templateUrl","styleUrls","routes","path","component","ClientPageRoutingModule","forChild","imports","exports","ClientPageModule","declarations","ClientPageService","http","get","host","providedIn"],"mappings":"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","file":"src-app-modules-client-page-client-page-module-es5.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { NavLink } from \"src/app/modules/ui/rap/nav-item/nav-link\";\nimport { ActivatedRoute } from \"@angular/router\";\n// import { NgxUiLoaderService } from \"ngx-ui-loader\";\nimport { ClientPageService } from \"src/app/modules/client-page/client-page.service\";\nimport { Title, Meta } from \"@angular/platform-browser\";\n\n@Component({\n  selector: \"app-client-page-page\",\n  templateUrl: \"./client-page-page.component.html\",\n  styleUrls: [\"./client-page-page.component.scss\"],\n})\nexport class ClientPagePageComponent implements OnInit {\n  alias: string = null;\n\n  breadcrumbs: Array<NavLink>;\n\n  constructor(\n    private route: ActivatedRoute,\n    // private ngxService: NgxUiLoaderService,\n    public clientPage: ClientPageService,\n\n    private title: Title,\n    private meta: Meta\n  ) {}\n\n  ngOnInit(): void {\n    this.initBreadcrumbs();\n\n    this.route.params.subscribe((data) => {\n      this.alias = data[\"alias\"];\n      this.getByAlias();\n    });\n  }\n\n  getByAlias() {\n    // this.ngxService.start();\n    this.clientPage.getByAlias(this.alias).subscribe(this.getByAliasHandler);\n  }\n\n  getByAliasHandler = (data) => {\n    // this.ngxService.stopAll();\n    this.clientPage.page = data.data;\n    this.updateMeta();\n    this.updateBreadcrumbs();\n  };\n\n  initBreadcrumbs() {\n    this.breadcrumbs = [\n      {\n        link: \"/\",\n        title: \"Homepage\",\n      },\n    ];\n  }\n\n  updateBreadcrumbs() {\n    this.initBreadcrumbs();\n    this.breadcrumbs.push({\n      link: `page/${this.clientPage.page.alias}`,\n      title: this.clientPage.page?.description?.title,\n    });\n  }\n\n  updateMeta() {\n    let title = this.clientPage.page?.description?.title + ` | ShowU`;\n    let desc = this.clientPage.page?.description?.meta_description;\n    let keys = this.clientPage.page?.description?.meta_keywords;\n    this.title.setTitle(title);\n    this.meta.updateTag({ name: \"description\", content: desc });\n    this.meta.updateTag({ name: \"keywords\", content: keys });\n  }\n}\n","<rap-breadcrumbs [breadcrumbs]=\"breadcrumbs\"></rap-breadcrumbs>\n\n<!-- <pre>{{ clientPage.page | json }}</pre> -->\n\n<div class=\"card\">\n  <div style=\"width: 100%;\" class=\"d4 text-center flex row center v_center\">\n    <h1 style=\"margin-top: 0;\">{{ clientPage.page?.description.title }}</h1>\n  </div>\n  <div [innerHTML]=\"clientPage.page?.description.text\"></div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { ClientPagePageComponent } from './client-page-page/client-page-page.component';\nconst routes: Routes = [\n  {\n    path: \":alias\",\n    component: ClientPagePageComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ClientPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClientPageRoutingModule } from './client-page-routing.module';\nimport { UiModule } from '../ui/ui.module';\nimport { ClientPagePageComponent } from './client-page-page/client-page-page.component';\n\n\n\n@NgModule({\n  declarations: [ClientPagePageComponent],\n  imports: [\n    CommonModule,\n    UiModule,\n    ClientPageRoutingModule\n  ]\n})\nexport class ClientPageModule { }\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\n\nexport interface IClientPageDescription {\n  id: number;\n  page_id: number;\n  lang_id: number;\n  title: string;\n  description: string;\n  meta_description: string;\n  meta_keywords: string;\n  text: string;\n  created_at: string;\n  updated_at: string;\n}\nexport interface IClientPage {\n  id: number;\n  status: number;\n  alias: string;\n  created_at: string;\n  updated_at: string;\n  description: IClientPageDescription;\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ClientPageService {\n  page: IClientPage;\n\n  constructor(private http: HttpClient) {}\n\n  getByAlias(alias: string): Observable<any> {\n    return this.http.get<any>(\n      environment.host + `client/getPageByAlias?alias=${alias}`\n    );\n  }\n}\n"]}