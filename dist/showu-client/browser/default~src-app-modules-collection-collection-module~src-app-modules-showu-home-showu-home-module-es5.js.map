{"version":3,"sources":["webpack:///src/app/modules/collection/collection-item/collection-item.component.ts","webpack:///src/app/modules/collection/collection-item/collection-item.component.html","webpack:///src/app/modules/collection/collection-page/collection-page.component.ts","webpack:///src/app/modules/collection/collection-page/collection-page.component.html","webpack:///src/app/modules/collection/collection-routing.module.ts","webpack:///src/app/modules/collection/collection-view-page/collection-view-page.component.ts","webpack:///src/app/modules/collection/collection-view-page/collection-view-page.component.html","webpack:///src/app/modules/collection/collection.module.ts","webpack:///src/app/modules/collection/collection.service.ts"],"names":["CollectionItemComponent","buttonText","routerLinks","ratio","host","hoststatic","item","id","selector","templateUrl","styleUrls","CollectionPageComponent","collection","breadcrumbs","link","title","collectionHandler","data","list","get","subscribe","routes","path","component","Ð¡ollectionRoutingModule","forChild","imports","exports","CollectionViewPageComponent","route","push","description","params","getBy","CollectionModule","declarations","CollectionService","http","created_at","collection_id","lang_id","subtitle","updated_at","image","album_id","src","src_mini","user_id","image_id","products","status","providedIn"],"mappings":"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","file":"default~src-app-modules-collection-collection-module~src-app-modules-showu-home-showu-home-module-es5.js","sourcesContent":["import { Component, OnInit, Input } from \"@angular/core\";\nimport { environment } from 'src/environments/environment';\n\ntype Ratio = \"imax\" | \"square\" | \"r3x1\";\n\n\n@Component({\n  selector: \"app-collection-item\",\n  templateUrl: \"./collection-item.component.html\",\n  styleUrls: [\"./collection-item.component.scss\"],\n})\nexport class CollectionItemComponent implements OnInit {\n  @Input() item: any;\n  @Input() buttonText: string = \"View\";\n  @Input() routerLinks: Array<string> = [];\n  @Input() ratio: Ratio = \"imax\";\n\n  @Input() host = environment.hoststatic;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  public get routerLinksWithId(): Array<string> {\n    return this.item.id != null\n      ? [...this.routerLinks, this.item.id]\n      : this.routerLinks;\n  }\n}\n","<div class=\"title\">\n  <h2 *ngIf=\"item?.title\">{{ item?.title }}</h2>\n  <h6 *ngIf=\"item?.subtitle\">{{ item?.subtitle }}</h6>\n  <div class=\"flex\" *ngIf=\"routerLinks.length > 0\">\n    <a\n      *ngIf=\"item?.id\"\n      [routerLink]=\"routerLinksWithId\"\n      class=\"more\"\n    >{{buttonText}}</a>\n    <a\n      *ngIf=\"!item?.id\"\n      [routerLink]=\"routerLinks\"\n      class=\"more\"\n    >{{buttonText}}</a>\n  </div>\n</div>\n\n<div class=\"ratio collection-item\">\n  <div class=\"square\">\n    <img\n      src=\"{{ host!=null ? host + item?.image?.src_mini : item?.cover }}\"\n      alt=\"{{ item?.title }}\"\n      class=\"contain\"\n    />\n  </div>\n</div>\n\n<!-- <pre>{{host}}{{ item?.image | json }}</pre> -->\n","import { Component, OnInit } from \"@angular/core\";\nimport { NavLink } from \"src/app/modules/ui/rap/nav-item/nav-link\";\nimport { CollectionService } from \"src/app/modules/collection/collection.service\";\n// import { NgxUiLoaderService } from \"ngx-ui-loader\";\n\n@Component({\n  selector: \"app-collection-page\",\n  templateUrl: \"./collection-page.component.html\",\n  styleUrls: [\"./collection-page.component.scss\"],\n})\nexport class CollectionPageComponent implements OnInit {\n  breadcrumbs: Array<NavLink> = [\n    {\n      link: \"/\",\n      title: \"Homepage\",\n    },\n    {\n      link: \"collection\",\n      title: \"Collection\",\n    },\n  ];\n\n  constructor(\n    // private ngxService: NgxUiLoaderService,\n    public collection: CollectionService\n  ) {}\n\n  ngOnInit(): void {\n    this.collection.get().subscribe(this.collectionHandler);\n  }\n\n  collectionHandler = (data) => {\n    this.collection.list = data.data;\n    // this.ngxService.stopAll();\n  };\n}\n","<rap-breadcrumbs [breadcrumbs]=\"breadcrumbs\"></rap-breadcrumbs>\n\n<section class=\"collections\">\n  <app-collection-item\n    class=\"medium\"\n    *ngFor=\"let item of collection.list\"\n    [item]=\"item\"\n    [buttonText]=\"'Shop now'\"\n    [routerLinks]=\"['/', 'collections', 'view']\"\n  ></app-collection-item>\n</section>\n\n<br>\n<br>\n<br>","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { CollectionPageComponent } from './collection-page/collection-page.component';\nimport { CollectionViewPageComponent } from './collection-view-page/collection-view-page.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: CollectionPageComponent,\n  },\n  {\n    path: \"view/:id\",\n    component: CollectionViewPageComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Ð¡ollectionRoutingModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { NavLink } from \"src/app/modules/ui/rap/nav-item/nav-link\";\n// import { NgxUiLoaderService } from \"ngx-ui-loader\";\nimport { CollectionService } from \"src/app/modules/collection/collection.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: \"app-collection-view-page\",\n  templateUrl: \"./collection-view-page.component.html\",\n  styleUrls: [\"./collection-view-page.component.scss\"],\n})\nexport class CollectionViewPageComponent implements OnInit {\n  breadcrumbs: Array<NavLink> = [\n    {\n      link: \"/\",\n      title: \"Homepage\",\n    },\n    {\n      link: \"collections\",\n      title: \"Collections\",\n    },\n  ];\n\n  id: number = 0;\n\n  constructor(\n    // private ngxService: NgxUiLoaderService,\n    public collection: CollectionService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((data) => {\n      this.id = data[\"id\"];\n      // this.ngxService.start();\n      this.collection.getBy(this.id).subscribe(this.collectionHandler);\n    });\n  }\n\n  host = environment.hoststatic;\n\n  collectionHandler = (data) => {\n    // this.ngxService.stopAll();\n    this.collection.item = data.data;\n\n    this.breadcrumbs.push({\n      link: `collections/${this.id}`,\n      title: this.collection.item.description?.title,\n    });\n  };\n}\n","<rap-breadcrumbs [breadcrumbs]=\"breadcrumbs\"></rap-breadcrumbs>\n<br />\n<div class=\"row\">\n  <!-- <div class=\"col col-side\">\n    <div class=\"filters\">\n      <i>Filters will be here</i>\n    </div>\n  </div> -->\n\n  <div class=\"col\">\n    <div class=\"grid\">\n      <app-collection-item\n        class=\"medium\"\n        [item]=\"{\n          image: collection.item?.image,\n          title: collection.item?.description?.title,\n          subtitle: collection.item?.description?.subtitle\n        }\"\n      ></app-collection-item>\n\n      <app-product-item\n        *ngFor=\"let item of collection.item.products\"\n        [product]=\"item.product\"\n      ></app-product-item>\n    </div>\n\n  </div>\n</div>\n<br />\n<br />\n<br />\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { CollectionItemComponent } from \"./collection-item/collection-item.component\";\nimport { RouterModule } from \"@angular/router\";\nimport { Ð¡ollectionRoutingModule } from \"./collection-routing.module\";\nimport { CollectionPageComponent } from \"./collection-page/collection-page.component\";\nimport { CollectionViewPageComponent } from \"./collection-view-page/collection-view-page.component\";\nimport { UiModule } from '../ui/ui.module';\nimport { ProductModule } from '../product/product.module';\n\n@NgModule({\n  declarations: [\n    CollectionItemComponent,\n    CollectionPageComponent,\n    CollectionViewPageComponent,\n  ],\n  exports: [CollectionItemComponent],\n  imports: [CommonModule, RouterModule, UiModule, Ð¡ollectionRoutingModule, ProductModule],\n})\nexport class CollectionModule {}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\n\nexport interface IResponseCollectionDesc {\n  collection_id: number;\n  created_at: string;\n  description: string;\n  id: number;\n  lang_id: number;\n  subtitle: string;\n  title: string;\n  updated_at: string;\n}\n\nexport interface ICollectionImage {\n  album_id: number;\n  created_at: string;\n  id: number;\n  src: string;\n  src_mini: string;\n  updated_at: string;\n  user_id: number;\n}\n\nexport interface IResponseCollection {\n  created_at: string;\n  description: IResponseCollectionDesc;\n  id: number;\n  image_id: number;\n  image: ICollectionImage;\n  products: Array<any>;\n  status: number;\n  updated_at: string;\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CollectionService {\n  list: Array<any> = [];\n  item: IResponseCollection = {\n    created_at: null,\n    description: {\n      collection_id: null,\n      created_at: null,\n      description: null,\n      id: null,\n      lang_id: null,\n      subtitle: null,\n      title: null,\n      updated_at: null,\n    },\n    id: null,\n    image: {\n      album_id: null,\n      created_at: null,\n      id: null,\n      src: null,\n      src_mini: null,\n      updated_at: null,\n      user_id: null,\n    },\n    image_id: null,\n    products: [],\n    status: null,\n    updated_at: null,\n  };\n\n  constructor(private http: HttpClient) {}\n\n  get(): Observable<any> {\n    return this.http.get<any>(\n      environment.host + `client/collection?lang=en&skip=0`\n    );\n  }\n  getLastThree(): Observable<any> {\n    return this.http.get<any>(\n      environment.host + `client/collection?lang=en&skip=0&take=3`\n    );\n  }\n\n  getBy(id: number): Observable<any> {\n    return this.http.get<any>(\n      environment.host + `/client/product_collection/${id}`\n    );\n  }\n}\n"]}